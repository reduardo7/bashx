#!/usr/bin/env bash

# BashX | https://github.com/reduardo7/bashx
export BASHX_VERSION="master"
(export LC_CTYPE=C;export LC_ALL=C;_e(){ echo "# $*";};_w(){ _e $* >&2;};_x(){ _w Error: $*;exit 1;};[ -z "${BASHX_VERSION}" ] && _x BASHX_VERSION is required;export BASHX_DIR="${BASHX_DIR:-$HOME/.bashx/$BASHX_VERSION}";export t="$(mktemp -d)";( set -e;if [ ! -d "$BASHX_DIR" ]; then _e Installing BashX ${BASHX_VERSION}...;m="Error downloading BashX ${BASHX_VERSION}";g="https://github.com/reduardo7/bashx/tarball/${BASHX_VERSION}";cd "$t";if type wget >/dev/null 2>&1 ; then wget --no-check-certificate $g -O - | tar -xz || _x $m;elif type curl >/dev/null 2>&1 ; then curl -sL $g | tar -xz || _x $m;else _x wget or curl are required. Install wget or curl to continue;fi;mkdir -p "$BASHX_DIR";rm -rf "$BASHX_DIR";mv reduardo7-bashx-* "$BASHX_DIR";fi);e=$?;rm -rf "$t" >/dev/null 2>&1 || true;exit $e) || exit $?
. "${HOME}/.bashx/${BASHX_VERSION}/init"

### Begin Example ###

@Actions.action1() { # \\n Action without arguments
  # ... Your code here ...
  @print Action 1
}

@Actions.action2() { # param1 param2 \\n Action with arguments
  # ... Your code here ...
  @print Action 2
  @print Param1: $1
  @print Param2: $2
}

### End Example ###

@run-app "$@"
