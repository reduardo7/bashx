#!/usr/bin/env bash

###############################################################################
# BashX | https://github.com/reduardo7/bashx
export BASHX_VERSION="master"
(export LC_CTYPE=C;export LC_ALL=C;set -e;x() { s="$*";echo "# Error: ${s:-Installation fail}" >&2;exit 1;};d=/dev/null;[ -z "$BASHX_VERSION" ] && x BASHX_VERSION is required;export BASHX_DIR="${BASHX_DIR:-${HOME:-/tmp}/.bashx/$BASHX_VERSION}";if [ ! -d "$BASHX_DIR" ]; then u='https://raw.githubusercontent.com/reduardo7/bashx/master/src/setup.sh';if type wget >$d 2>&1 ; then sh -c "$(wget -q $u -O -)" || x;elif type curl >$d 2>&1 ; then sh -c "$(curl -fsSL $u)" || x;else x wget or curl are required. Install wget or curl to continue;fi;fi) || exit $?
. "${HOME:-/tmp}/.bashx/${BASHX_VERSION}/init"
###############################################################################

### Begin Example ###

@Actions.action1() { # \\n Action without arguments
  @print "
  Action 1
  Multi-Line
"
}

@Actions.action2() { # param1 [param2] \\n Action with arguments\\n\\tdescription second line\\nother line
  eval "$(@options 'new:-n|-N' 'path:-p|--path:true')"

  @print "'n' or 'N' parameter: ${new}"
  @print "'p' or 'path' parameter: ${path[@]} (${#path[@]})"

  local param1="$1"
  local param2="$2"
  [ "$param1" != 'asd' ] && @throw-invalid-param param1

  @print Action 2
  @print Param1: $1
  @print Param2: $2
}

### End Example ###

@run-app "$@"
